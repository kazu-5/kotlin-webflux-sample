/*
 * This file is generated by jOOQ.
 */
package com.sample.information_schema.routines


import com.sample.information_schema.InformationSchema

import org.jooq.Field
import org.jooq.Parameter
import org.jooq.Record
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class _PgTruetypmod : AbstractRoutine<Int>("_pg_truetypmod", InformationSchema.INFORMATION_SCHEMA, SQLDataType.INTEGER) {
    companion object {

        /**
         * The parameter
         * <code>information_schema._pg_truetypmod.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<Int?> = Internal.createParameter("RETURN_VALUE", SQLDataType.INTEGER, false, false)

        /**
         * The parameter <code>information_schema._pg_truetypmod._1</code>.
         */
        val _1: Parameter<Record?> = Internal.createParameter("_1", com.sample.pg_catalog.tables.PgAttribute.PG_ATTRIBUTE.getDataType(), false, true)

        /**
         * The parameter <code>information_schema._pg_truetypmod._2</code>.
         */
        val _2: Parameter<Record?> = Internal.createParameter("_2", com.sample.pg_catalog.tables.PgType.PG_TYPE.getDataType(), false, true)
    }

    init {
        returnParameter = RETURN_VALUE
        addInParameter(_1)
        addInParameter(_2)
    }

    /**
     * Set the <code>_1</code> parameter IN value to the routine
     */
    fun set__1(value: Record?): Unit = setValue(_1, value)

    /**
     * Set the <code>_1</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun set__1(field: Field<Record?>): Unit {
        setField(_1, field)
    }

    /**
     * Set the <code>_2</code> parameter IN value to the routine
     */
    fun set__2(value: Record?): Unit = setValue(_2, value)

    /**
     * Set the <code>_2</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun set__2(field: Field<Record?>): Unit {
        setField(_2, field)
    }
}
