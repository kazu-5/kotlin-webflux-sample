/*
 * This file is generated by jOOQ.
 */
package com.sample.pg_catalog.routines


import com.sample.pg_catalog.PgCatalog

import java.time.OffsetDateTime

import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgStatGetSubscription : AbstractRoutine<java.lang.Void>("pg_stat_get_subscription", PgCatalog.PG_CATALOG) {
    companion object {

        /**
         * The parameter <code>pg_catalog.pg_stat_get_subscription.subid</code>.
         */
        val SUBID1: Parameter<Long?> = Internal.createParameter("subid", SQLDataType.BIGINT, false, false)

        /**
         * The parameter <code>pg_catalog.pg_stat_get_subscription.subid</code>.
         */
        val SUBID2: Parameter<Long?> = Internal.createParameter("subid", SQLDataType.BIGINT, false, false)

        /**
         * The parameter <code>pg_catalog.pg_stat_get_subscription.relid</code>.
         */
        val RELID: Parameter<Long?> = Internal.createParameter("relid", SQLDataType.BIGINT, false, false)

        /**
         * The parameter <code>pg_catalog.pg_stat_get_subscription.pid</code>.
         */
        val PID: Parameter<Int?> = Internal.createParameter("pid", SQLDataType.INTEGER, false, false)
        @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
        val RECEIVED_LSN: Parameter<Any?> = Internal.createParameter("received_lsn", org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"pg_lsn\""), false, false)

        /**
         * The parameter
         * <code>pg_catalog.pg_stat_get_subscription.last_msg_send_time</code>.
         */
        val LAST_MSG_SEND_TIME: Parameter<OffsetDateTime?> = Internal.createParameter("last_msg_send_time", SQLDataType.TIMESTAMPWITHTIMEZONE(6), false, false)

        /**
         * The parameter
         * <code>pg_catalog.pg_stat_get_subscription.last_msg_receipt_time</code>.
         */
        val LAST_MSG_RECEIPT_TIME: Parameter<OffsetDateTime?> = Internal.createParameter("last_msg_receipt_time", SQLDataType.TIMESTAMPWITHTIMEZONE(6), false, false)
        @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
        val LATEST_END_LSN: Parameter<Any?> = Internal.createParameter("latest_end_lsn", org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"pg_lsn\""), false, false)

        /**
         * The parameter
         * <code>pg_catalog.pg_stat_get_subscription.latest_end_time</code>.
         */
        val LATEST_END_TIME: Parameter<OffsetDateTime?> = Internal.createParameter("latest_end_time", SQLDataType.TIMESTAMPWITHTIMEZONE(6), false, false)
    }

    init {
        addInOutParameter(SUBID1)
        addInOutParameter(SUBID2)
        addOutParameter(RELID)
        addOutParameter(PID)
        addOutParameter(RECEIVED_LSN)
        addOutParameter(LAST_MSG_SEND_TIME)
        addOutParameter(LAST_MSG_RECEIPT_TIME)
        addOutParameter(LATEST_END_LSN)
        addOutParameter(LATEST_END_TIME)
    }

    /**
     * Set the <code>subid</code> parameter IN value to the routine
     */
    fun setSubid1(value: Long?): Unit = setValue(SUBID1, value)

    /**
     * Get the <code>subid</code> parameter OUT value from the routine
     */
    fun getSubid1(): Long? = get(SUBID1)

    /**
     * Get the <code>subid</code> parameter OUT value from the routine
     */
    fun getSubid2(): Long? = get(SUBID2)

    /**
     * Get the <code>relid</code> parameter OUT value from the routine
     */
    fun getRelid(): Long? = get(RELID)

    /**
     * Get the <code>pid</code> parameter OUT value from the routine
     */
    fun getPid(): Int? = get(PID)
    @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    fun getReceivedLsn(): Any? = get(RECEIVED_LSN)

    /**
     * Get the <code>last_msg_send_time</code> parameter OUT value from the
     * routine
     */
    fun getLastMsgSendTime(): OffsetDateTime? = get(LAST_MSG_SEND_TIME)

    /**
     * Get the <code>last_msg_receipt_time</code> parameter OUT value from the
     * routine
     */
    fun getLastMsgReceiptTime(): OffsetDateTime? = get(LAST_MSG_RECEIPT_TIME)
    @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    fun getLatestEndLsn(): Any? = get(LATEST_END_LSN)

    /**
     * Get the <code>latest_end_time</code> parameter OUT value from the routine
     */
    fun getLatestEndTime(): OffsetDateTime? = get(LATEST_END_TIME)
}
