/*
 * This file is generated by jOOQ.
 */
package com.sample.pg_catalog.routines


import com.sample.pg_catalog.PgCatalog

import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class BinaryUpgradeCreateEmptyExtension : AbstractRoutine<java.lang.Void>("binary_upgrade_create_empty_extension", PgCatalog.PG_CATALOG) {
    companion object {

        /**
         * The parameter
         * <code>pg_catalog.binary_upgrade_create_empty_extension._1</code>.
         */
        val _1: Parameter<String?> = Internal.createParameter("_1", SQLDataType.CLOB, false, true)

        /**
         * The parameter
         * <code>pg_catalog.binary_upgrade_create_empty_extension._2</code>.
         */
        val _2: Parameter<String?> = Internal.createParameter("_2", SQLDataType.CLOB, false, true)

        /**
         * The parameter
         * <code>pg_catalog.binary_upgrade_create_empty_extension._3</code>.
         */
        val _3: Parameter<Boolean?> = Internal.createParameter("_3", SQLDataType.BOOLEAN, false, true)

        /**
         * The parameter
         * <code>pg_catalog.binary_upgrade_create_empty_extension._4</code>.
         */
        val _4: Parameter<String?> = Internal.createParameter("_4", SQLDataType.CLOB, false, true)

        /**
         * The parameter
         * <code>pg_catalog.binary_upgrade_create_empty_extension._5</code>.
         */
        val _5: Parameter<Array<Long?>?> = Internal.createParameter("_5", SQLDataType.BIGINT.getArrayDataType(), false, true)

        /**
         * The parameter
         * <code>pg_catalog.binary_upgrade_create_empty_extension._6</code>.
         */
        val _6: Parameter<Array<String?>?> = Internal.createParameter("_6", SQLDataType.CLOB.getArrayDataType(), false, true)

        /**
         * The parameter
         * <code>pg_catalog.binary_upgrade_create_empty_extension._7</code>.
         */
        val _7: Parameter<Array<String?>?> = Internal.createParameter("_7", SQLDataType.CLOB.getArrayDataType(), false, true)
    }

    init {
        addInParameter(_1)
        addInParameter(_2)
        addInParameter(_3)
        addInParameter(_4)
        addInParameter(_5)
        addInParameter(_6)
        addInParameter(_7)
    }

    /**
     * Set the <code>_1</code> parameter IN value to the routine
     */
    fun set__1(value: String?): Unit = setValue(_1, value)

    /**
     * Set the <code>_2</code> parameter IN value to the routine
     */
    fun set__2(value: String?): Unit = setValue(_2, value)

    /**
     * Set the <code>_3</code> parameter IN value to the routine
     */
    fun set__3(value: Boolean?): Unit = setValue(_3, value)

    /**
     * Set the <code>_4</code> parameter IN value to the routine
     */
    fun set__4(value: String?): Unit = setValue(_4, value)

    /**
     * Set the <code>_5</code> parameter IN value to the routine
     */
    fun set__5(value: Array<Long?>?): Unit = setValue(_5, value)

    /**
     * Set the <code>_6</code> parameter IN value to the routine
     */
    fun set__6(value: Array<String?>?): Unit = setValue(_6, value)

    /**
     * Set the <code>_7</code> parameter IN value to the routine
     */
    fun set__7(value: Array<String?>?): Unit = setValue(_7, value)
}
