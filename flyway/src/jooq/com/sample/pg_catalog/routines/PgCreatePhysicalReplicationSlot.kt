/*
 * This file is generated by jOOQ.
 */
package com.sample.pg_catalog.routines


import com.sample.pg_catalog.PgCatalog

import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.DSL
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgCreatePhysicalReplicationSlot : AbstractRoutine<java.lang.Void>("pg_create_physical_replication_slot", PgCatalog.PG_CATALOG) {
    companion object {

        /**
         * The parameter
         * <code>pg_catalog.pg_create_physical_replication_slot.slot_name</code>.
         */
        val SLOT_NAME1: Parameter<String?> = Internal.createParameter("slot_name", SQLDataType.VARCHAR, false, false)

        /**
         * The parameter
         * <code>pg_catalog.pg_create_physical_replication_slot.immediately_reserve</code>.
         */
        val IMMEDIATELY_RESERVE: Parameter<Boolean?> = Internal.createParameter("immediately_reserve", SQLDataType.BOOLEAN.defaultValue(DSL.field("false", SQLDataType.BOOLEAN)), true, false)

        /**
         * The parameter
         * <code>pg_catalog.pg_create_physical_replication_slot.temporary</code>.
         */
        val TEMPORARY: Parameter<Boolean?> = Internal.createParameter("temporary", SQLDataType.BOOLEAN.defaultValue(DSL.field("false", SQLDataType.BOOLEAN)), true, false)

        /**
         * The parameter
         * <code>pg_catalog.pg_create_physical_replication_slot.slot_name</code>.
         */
        val SLOT_NAME4: Parameter<String?> = Internal.createParameter("slot_name", SQLDataType.VARCHAR, false, false)
        @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
        val LSN: Parameter<Any?> = Internal.createParameter("lsn", org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"pg_lsn\""), false, false)
    }

    init {
        addInOutParameter(SLOT_NAME1)
        addInParameter(IMMEDIATELY_RESERVE)
        addInParameter(TEMPORARY)
        addInOutParameter(SLOT_NAME4)
        addOutParameter(LSN)
    }

    /**
     * Set the <code>slot_name</code> parameter IN value to the routine
     */
    fun setSlotName1(value: String?): Unit = setValue(SLOT_NAME1, value)

    /**
     * Set the <code>immediately_reserve</code> parameter IN value to the
     * routine
     */
    fun setImmediatelyReserve(value: Boolean?): Unit = setValue(IMMEDIATELY_RESERVE, value)

    /**
     * Set the <code>temporary</code> parameter IN value to the routine
     */
    fun setTemporary(value: Boolean?): Unit = setValue(TEMPORARY, value)

    /**
     * Get the <code>slot_name</code> parameter OUT value from the routine
     */
    fun getSlotName1(): String? = get(SLOT_NAME1)

    /**
     * Get the <code>slot_name</code> parameter OUT value from the routine
     */
    fun getSlotName4(): String? = get(SLOT_NAME4)
    @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    fun getLsn(): Any? = get(LSN)
}
