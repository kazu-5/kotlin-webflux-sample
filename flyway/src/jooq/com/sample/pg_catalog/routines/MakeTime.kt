/*
 * This file is generated by jOOQ.
 */
package com.sample.pg_catalog.routines


import com.sample.pg_catalog.PgCatalog

import java.time.LocalTime

import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class MakeTime : AbstractRoutine<LocalTime>("make_time", PgCatalog.PG_CATALOG, SQLDataType.LOCALTIME(6)) {
    companion object {

        /**
         * The parameter <code>pg_catalog.make_time.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<LocalTime?> = Internal.createParameter("RETURN_VALUE", SQLDataType.LOCALTIME(6), false, false)

        /**
         * The parameter <code>pg_catalog.make_time.hour</code>.
         */
        val HOUR: Parameter<Int?> = Internal.createParameter("hour", SQLDataType.INTEGER, false, false)

        /**
         * The parameter <code>pg_catalog.make_time.min</code>.
         */
        val MIN: Parameter<Int?> = Internal.createParameter("min", SQLDataType.INTEGER, false, false)

        /**
         * The parameter <code>pg_catalog.make_time.sec</code>.
         */
        val SEC: Parameter<Double?> = Internal.createParameter("sec", SQLDataType.DOUBLE, false, false)
    }

    init {
        returnParameter = RETURN_VALUE
        addInParameter(HOUR)
        addInParameter(MIN)
        addInParameter(SEC)
    }

    /**
     * Set the <code>hour</code> parameter IN value to the routine
     */
    fun setHour(value: Int?): Unit = setValue(HOUR, value)

    /**
     * Set the <code>hour</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun setHour(field: Field<Int?>): Unit {
        setField(HOUR, field)
    }

    /**
     * Set the <code>min</code> parameter IN value to the routine
     */
    fun setMin(value: Int?): Unit = setValue(MIN, value)

    /**
     * Set the <code>min</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun setMin(field: Field<Int?>): Unit {
        setField(MIN, field)
    }

    /**
     * Set the <code>sec</code> parameter IN value to the routine
     */
    fun setSec(value: Double?): Unit = setValue(SEC, value)

    /**
     * Set the <code>sec</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun setSec(field: Field<Double?>): Unit {
        setField(SEC, field)
    }
}
